#https://docs.github.com/en/actions/use-cases-and-examples/deploying/deploying-to-azure-kubernetes-service
#https://github.com/marketplace/actions/azure-login#login-with-a-service-principal-secret
#https://cert-manager.io/docs/installation/helm/

name: Deploy Nginx to aks

on:
    workflow_dispatch:

permissions:
  id-token: write # Required for OIDC authentication
  contents: read # Required to read repository contents
  actions: read # Required for GitHub Actions
  checks: write # Required for status checks



jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2


    - name: Load outputs
      run: |
        cat tf-outputs.env >> $GITHUB_ENV
    
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
        enable-AzPSSession: true

    - name: Attach ACR to aks
      run: |
        az aks update -n $AKS_CLUSTER_NAME -g $RESOURCE_GROUP --attach-acr $ACR_NAME

    - name: Login to ACR using az acr login
      run: |
        az acr login --name $ACR_NAME


    - name: Build and push to ACR
      run: |
        docker pull abdulnaser93/my-nginx:latest
        docker tag abdulnaser93/my-nginx:latest ${{ env.ACR_NAME }}.azurecr.io/my-nginx:latest
        docker push ${{ env.ACR_NAME }}.azurecr.io/my-nginx:latest

    - name: Set up Kubernetes tools
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Setup kubelogin
      uses: azure/use-kubelogin@v1
      with:
       kubelogin-version: 'v0.0.26'
    
    - name: Set aks context
      id: set-context
      uses: azure/aks-set-context@v3
      with:
       resource-group: ${{ env.RESOURCE_GROUP }}
       cluster-name: ${{ env.AKS_CLUSTER_NAME }}
       admin: 'false'
       use-kubelogin: 'true' 

    - name: Install Helm
      uses: azure/setup-helm@v3

    # - name: Add Ingress-nginx Helm repo
    #   run: |
    #     helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
    #     helm repo update     
        
    # - name: Install NGINX Ingress Controller 
    #   run: |
    #     helm install ingress-nginx ingress-nginx/ingress-nginx \
    #       --create-namespace \
    #       --namespace ingress-basic \
    #       --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"=/healthz \
    #       --set controller.service.externalTrafficPolicy=Local

    - name: Add the Jetstack Helm repository
      run: |
        helm repo add jetstack https://charts.jetstack.io --force-update
        helm repo update 

    - name: Install cert-manager
      run: |
        helm upgrade --install cert-manager jetstack/cert-manager \
          --namespace ingress-basic \
          --create-namespace \
          --version v1.17.0 \
          --set crds.enabled=true \
          --force      


    - name: Set up federation with AKS
      run: |
        echo "Set up federation with AKS OIDC issuer"
        AKS_OIDC_ISSUER="$(az aks show -n ${{ env.AKS_CLUSTER_NAME }} -g ${{ env.RESOURCE_GROUP }} --query "oidcIssuerProfile.issuerUrl" -o tsv)"
        echo "OIDC Issuer URL: $AKS_OIDC_ISSUER"
        az identity federated-credential create --name "agic" \
            --identity-name "$IDENTITY_RESOURCE_NAME" \
            --resource-group "$MANAGED_CLUSTER_RESOURCE_GROUP" \
            --issuer "$AKS_OIDC_ISSUER" \
            --subject "system:serviceaccount:ingress-basic:ingress-azure"


    - name: Install AGIC Controller
      run: |
        # Get AKS credentials
        az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER_NAME
        kubectl annotate ingressclass azure-application-gateway \
        meta.helm.sh/release-name=ingress-azure \
        meta.helm.sh/release-namespace=ingress-basic --overwrite

        kubectl label ingressclass azure-application-gateway \
        app.kubernetes.io/managed-by=Helm --overwrite


        # on aks cluster with only linux node pools
        helm upgrade --install ingress-azure \
          --namespace ingress-basic \
          oci://mcr.microsoft.com/azure-application-gateway/charts/ingress-azure \
          --set appgw.applicationGatewayID=$APPGW_ID \
          --set armAuth.type=workloadIdentity \
          --set armAuth.identityClientID=$IDENTITY_CLIENT_ID \
          --set rbac.enabled=true \
          --version 1.7.3


  

    - name: Deploy to aks
      uses: azure/k8s-deploy@v3
      with:
        namespace: ingress-basic
        manifests: |
          k8s/nginx-deployment.yml
          k8s/ingress.yml
          k8s/issuer.yml
        # k8s/nginx-service.yml
          # k8s/azure-file-sc.yml
          # k8s/azure-file-pvc.yml
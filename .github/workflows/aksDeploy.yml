#https://github.com/hashicorp/setup-terraform
#https://learn.microsoft.com/en-us/devops/deliver/iac-github-actions#deploy-with-github-actions
#https://github.com/Azure/actions-workflow-samples?tab=readme-ov-file
#https://azure.github.io/actions/

name: 'aks Deployment'

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      working-directory: aks
      run: terraform init
           
    - name: Terraform Format
      working-directory: aks
      run: terraform fmt

    - name: Terraform Plan
      working-directory: aks
      run: terraform plan
    
    - name: Terraform Apply
      working-directory: aks
      run: terraform apply -auto-approve

    - name: Commit and Push Terraform State
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        git add aks/terraform.tfstate
        git commit -m "Update Terraform state"
        git push

    - name: Export Terraform Outputs
      id: tf_outputs
      working-directory: aks
      run: |
        echo "RESOURCE_GROUP=$(terraform output -raw resource_group_name)" >> $GITHUB_ENV
        echo "AKS_CLUSTER_NAME=$(terraform output -raw aks_cluster_name)" >> $GITHUB_ENV
        echo "APPGW_ID=$(terraform output -raw app_gateway_id)" >> $GITHUB_ENV
        echo "IDENTITY_CLIENT_ID=$(terraform output -raw agic_identity_client_id)" >> $GITHUB_ENV
        echo "APP_GATEWAY_NAME=$(terraform output -raw app_gateway_name)" >> $GITHUB_ENV
        echo "IDENTITY_RESOURCE_ID=$(terraform output -raw identity_resource_id)" >> $GITHUB_ENV
        echo "ACR_NAME=$(terraform output -raw azurerm_container_registry)" >> $GITHUB_ENV
        echo "IDENTITY_RESOURCE_NAME=$(terraform output -raw agic_identity_client_name)" >> $GITHUB_ENV

    - name: Debug output
      run: |
        echo "RESOURCE_GROUP=${{ env.RESOURCE_GROUP }}"
        echo "AKS_CLUSTER_NAME=${{ env.AKS_CLUSTER_NAME }}"
        echo "APPGW_ID=${{ env.APPGW_ID }}"
        echo "IDENTITY_CLIENT_ID=${{ env.IDENTITY_CLIENT_ID }}"
        echo "APP_GATEWAY_NAME=${{ env.APP_GATEWAY_NAME }}"
        echo "IDENTITY_RESOURCE_ID=${{ env.IDENTITY_RESOURCE_ID}}"
        echo "ACR_NAME=${{ env.ACR_NAME}}"
        echo "IDENTITY_RESOURCE_NAME=${{ env.IDENTITY_RESOURCE_NAME}}"

    - name: Save Terraform outputs to file
      working-directory: aks
      run: |
        echo "RESOURCE_GROUP=$(terraform output -raw resource_group_name)" >> tf-outputs.env
        echo "AKS_CLUSTER_NAME=$(terraform output -raw aks_cluster_name)" >> tf-outputs.env
        echo "ACR_NAME=$(terraform output -raw azurerm_container_registry)" >> tf-outputs.env
        echo "APPGW_ID=$(terraform output -raw app_gateway_id)" >> tf-outputs.env
        echo "IDENTITY_CLIENT_ID=$(terraform output -raw agic_identity_client_id)" >> tf-outputs.env
        echo "APP_GATEWAY_NAME=$(terraform output -raw app_gateway_name)" >> tf-outputs.env
        echo "IDENTITY_RESOURCE_ID=$(terraform output -raw identity_resource_id)" >> tf-outputs.env
        echo "IDENTITY_RESOURCE_NAME=$(terraform output -raw agic_identity_client_name)" >> tf-outputs.env

    # - name: Upload Terraform Outputs as Artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: tf-outputs
    #     path: aks/tf-outputs.env

    - name: Save Terraform outputs to repo
      run: |
        git config user.email "github-actions@github.com"
        git config user.name "GitHub Actions"
        cp aks/tf-outputs.env ./tf-outputs.env
        git add tf-outputs.env
        git commit -m "Save tf outputs"
        git push
